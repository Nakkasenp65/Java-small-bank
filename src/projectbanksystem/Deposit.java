/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projectbanksystem;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author nakka
 */
public class Deposit extends javax.swing.JFrame {

    /**
     * Creates new form Deposit
     */
    public Deposit() {
        initComponents();
        setLocationRelativeTo(null);
        pack();
        loadFileLocation();
        loadAccounts();
//        JPanel panel = new JPanel();
//        panel.setBackground(java.awt.Color.white);
//        setContentPane(panel);

        addWindowListener(new WindowAdapter(){
            @Override
            public void windowClosing(WindowEvent e) {
                super.windowClosing(e); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
                saveAccounts();
                
            }
            
        
        });

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelBack = new javax.swing.JLabel();
        panelBorder1 = new Swing.PanelBorder();
        txtDigitTrans = new javax.swing.JTextField();
        labelAmount11 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        btnConfirm = new javax.swing.JButton();
        panelBorder2 = new Swing.PanelBorder();
        txtDigit = new javax.swing.JTextField();
        labelAmount10 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        btnShow = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Deposit");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(14, 36, 32));

        labelBack.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        labelBack.setForeground(new java.awt.Color(255, 255, 255));
        labelBack.setText("Back");
        labelBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelBackMouseClicked(evt);
            }
        });

        panelBorder1.setBackground(new java.awt.Color(39, 89, 71));

        txtDigitTrans.setColumns(16);
        txtDigitTrans.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N

        labelAmount11.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        labelAmount11.setForeground(new java.awt.Color(255, 255, 255));
        labelAmount11.setText("Digit");

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Amount");

        txtAmount.setColumns(16);
        txtAmount.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N

        btnConfirm.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        btnConfirm.setForeground(new java.awt.Color(14, 36, 32));
        btnConfirm.setText("Deposit");
        btnConfirm.setBorderPainted(false);
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        panelBorder1.setLayer(txtDigitTrans, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelBorder1.setLayer(labelAmount11, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelBorder1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelBorder1.setLayer(txtAmount, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelBorder1.setLayer(btnConfirm, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout panelBorder1Layout = new javax.swing.GroupLayout(panelBorder1);
        panelBorder1.setLayout(panelBorder1Layout);
        panelBorder1Layout.setHorizontalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnConfirm)
                    .addGroup(panelBorder1Layout.createSequentialGroup()
                        .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(labelAmount11))
                        .addGap(18, 18, 18)
                        .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDigitTrans, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(32, 32, 32))
        );
        panelBorder1Layout.setVerticalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDigitTrans, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelAmount11))
                .addGap(16, 16, 16)
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(btnConfirm)
                .addGap(32, 32, 32))
        );

        panelBorder2.setBackground(new java.awt.Color(39, 89, 71));

        txtDigit.setColumns(16);
        txtDigit.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N

        labelAmount10.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        labelAmount10.setForeground(new java.awt.Color(255, 255, 255));
        labelAmount10.setText("Digit");

        txtArea.setEditable(false);
        txtArea.setColumns(20);
        txtArea.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        txtArea.setRows(5);
        jScrollPane10.setViewportView(txtArea);

        btnShow.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        btnShow.setForeground(new java.awt.Color(14, 36, 32));
        btnShow.setText("Show");
        btnShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowActionPerformed(evt);
            }
        });

        panelBorder2.setLayer(txtDigit, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelBorder2.setLayer(labelAmount10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelBorder2.setLayer(jScrollPane10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelBorder2.setLayer(btnShow, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout panelBorder2Layout = new javax.swing.GroupLayout(panelBorder2);
        panelBorder2.setLayout(panelBorder2Layout);
        panelBorder2Layout.setHorizontalGroup(
            panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane10)
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addComponent(labelAmount10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtDigit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnShow)))
                .addGap(32, 32, 32))
        );
        panelBorder2Layout.setVerticalGroup(
            panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnShow)
                    .addComponent(labelAmount10)
                    .addComponent(txtDigit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        jPanel3.setBackground(new java.awt.Color(39, 89, 71));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/bank.png"))); // NOI18N
        jLabel4.setText(" Bank System Deposit");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/gross-dark-cross 1.png"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 489, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(8, 8, 8))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelBack)
                        .addGap(490, 490, 490))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(panelBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panelBorder2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelBorder2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(panelBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(128, 128, 128)))
                .addGap(32, 32, 32)
                .addComponent(labelBack)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    HashMap<String, Account> hashAccount = new HashMap<>();
    private int nextAccountNumber = 1;
    private List<TransactionRecord> transactionRecords = new ArrayList<>();
    private File lastLoadedFile;
    
    //load v2------------------------------------------------------------------------------
    private void loadAccounts() {
        if (lastLoadedFile != null) { // If last loaded file location exists, use it
            try {
                FileInputStream fis = new FileInputStream(lastLoadedFile);
                ObjectInputStream ois = new ObjectInputStream(fis);

                AccountData data = (AccountData) ois.readObject();

                hashAccount = data.getAccounts();
                nextAccountNumber = data.getNextAccountNumber();
                transactionRecords = data.getTransactionRecords();

                ois.close();
                fis.close();
            } catch (IOException | ClassNotFoundException e) {
                e.printStackTrace();
            }
        } else { // Otherwise, show open dialog
            JFileChooser fileChooser = new JFileChooser();
            int result = fileChooser.showOpenDialog(null);

            if (result == JFileChooser.APPROVE_OPTION) {
                File file = fileChooser.getSelectedFile();
                try {
                    FileInputStream fis = new FileInputStream(file);
                    ObjectInputStream ois = new ObjectInputStream(fis);

                    AccountData data = (AccountData) ois.readObject();

                    hashAccount = data.getAccounts();
                    nextAccountNumber = data.getNextAccountNumber();
                    transactionRecords = data.getTransactionRecords();

                    ois.close();
                    fis.close();

                    lastLoadedFile = file; // Store the loaded file location as lastLoadedFile
                } catch (IOException | ClassNotFoundException e) {
                    e.printStackTrace();
                }
            }
        }
    }
    //load v2 -----------------------------------------------------------------------------
    
    //-loadAccount v1 ---------------------------------------------------------------------
//    private void loadAccounts() {
//        try {
//            FileInputStream fis = new FileInputStream("accounts.dat");
//            ObjectInputStream ois = new ObjectInputStream(fis);
//            AccountData data = (AccountData) ois.readObject();
//            hashAccount = data.getAccounts();
//            nextAccountNumber = data.getNextAccountNumber();
//            transactionRecords = data.getTransactionRecords();
//            ois.close();
//            fis.close();
//        } catch (IOException | ClassNotFoundException e) {
//            e.printStackTrace();
//        }
//    }
    //-load v1 ----------------------------------------------------------------------------
    
    
    //save v2
    private void saveAccounts() {
            File file = lastLoadedFile;// Get selected file
            try {
                // create an output stream for writing to the selected file
                FileOutputStream fos = new FileOutputStream(file);
                ObjectOutputStream oos = new ObjectOutputStream(fos);

                AccountData data = new AccountData(hashAccount, nextAccountNumber, transactionRecords);

                oos.writeObject(data); // Write data to file
                oos.close();
                fos.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    //save v2
    
    
//    private void saveAccounts() {
//        try {
//            FileOutputStream fos = new FileOutputStream("accounts.dat");
//            ObjectOutputStream oos = new ObjectOutputStream(fos);
//            AccountData data = new AccountData(hashAccount, nextAccountNumber, transactionRecords);
//            oos.writeObject(data);
//            oos.close();
//            fos.close();
//        } catch (IOException e) {
//                e.printStackTrace();
//        }
//    }
    
    private void loadFileLocation() {
        try {
            FileInputStream fis = new FileInputStream("fileLocation.dat");
            ObjectInputStream ois = new ObjectInputStream(fis);
            FileLocationSaver fileLocation = (FileLocationSaver) ois.readObject();
            lastLoadedFile = fileLocation.getLastedLoadedFile();
            ois.close();
            fis.close();
        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
        }
    }
    
    
    
    private void btnShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowActionPerformed
        // TODO add your handling code here:
        try{
        int number = Integer.parseInt(txtDigit.getText());
        Account account = hashAccount.get(txtDigit.getText());
        String information = account.information();
        txtArea.setText(information);
        } catch( NumberFormatException e ){
            JOptionPane.showMessageDialog(null, "Please, fill account digit number");
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Account not found");
        } 
    }//GEN-LAST:event_btnShowActionPerformed

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        // TODO add your handling code here:
        try{
        Account account = hashAccount.get(txtDigitTrans.getText());
        double amount = Double.parseDouble(txtAmount.getText());
        account.deposit(amount);
        int accountNumber = Integer.parseInt(txtDigitTrans.getText());
        
        
        JOptionPane.showMessageDialog(null, 
                "Account number : "+txtDigitTrans.getText()+"\n"+
                "deposit : "+amount+"\n"+
                "balance : "+account.balance
                        );
        
        
        String transactionType = "   Deposit  ";
        LocalDate transactionDate = LocalDate.now();
        TransactionRecord record = new TransactionRecord(transactionType, transactionDate, accountNumber ,amount);
        addTransactionRecord(record);
        } catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "Account not found!");
        } catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please fill in amount");
        }
        
    }//GEN-LAST:event_btnConfirmActionPerformed
    
    public void addTransactionRecord(TransactionRecord record) {
        transactionRecords.add(record);
    }
    
    private void labelBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelBackMouseClicked
        // TODO add your handling code here:
        Main main = new Main();
        main.setVisible(true);
        saveAccounts();
        dispose();
        
    }//GEN-LAST:event_labelBackMouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jLabel2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Deposit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Deposit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Deposit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Deposit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Deposit().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnShow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JLabel labelAmount10;
    private javax.swing.JLabel labelAmount11;
    private javax.swing.JLabel labelBack;
    private Swing.PanelBorder panelBorder1;
    private Swing.PanelBorder panelBorder2;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextArea txtArea;
    private javax.swing.JTextField txtDigit;
    private javax.swing.JTextField txtDigitTrans;
    // End of variables declaration//GEN-END:variables
}
